{"version":3,"sources":["components/filter.js","components/newperson.js","components/numbers.js","services/persons.js","components/notify.js","App.js","serviceWorker.js","index.js"],"names":["Filter","searchName","handleSearchNameChange","value","onChange","Newperson","addName","newName","handleNameChange","newNr","handleNrChange","onSubmit","type","Numbers","persons","filteredPersons","delButton","map","person","key","name","number","onClick","id","baseUrl","axios","get","then","response","data","newPerson","post","delete","put","Notify","msg","setMsg","success","useEffect","setTimeout","color","msgStyle","background","border","style","App","useState","setPersons","setNewName","setNewNr","setSearchName","setFilteredPersons","setSuccess","personsapi","persondata","fp","filter","n","toLowerCase","includes","event","target","preventDefault","found","length","p","window","confirm","concat","catch","error","console","log","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.185b2a77.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({searchName, handleSearchNameChange}) => {\n  return (\n    <div>\n      <p>filter shown with <input\n        value={searchName}\n        onChange={handleSearchNameChange} /></p>\n    </div>\n  );\n};\n\nexport default Filter;","import React from 'react'\n\nconst Newperson = ({addName, newName, handleNameChange, newNr, handleNrChange}) => {\n  return (\n    <form onSubmit ={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n        number: <input value={newNr} onChange={handleNrChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Newperson","import React from 'react';\n\nconst Numbers = ({persons, filteredPersons, delButton}) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      <div>\n        {persons.map(person =>\n          <p key={person.name}>{person.name} {person.number}</p>)}\n        <h1>Filtered persons</h1>\n        {filteredPersons.map(person =>\n          <p key={person.name}>\n            {person.name} {person.number}\n            <button onClick={delButton(person.id)}>delete</button>\n          </p>)}\n      </div>\n    </div>\n  );\n};\n\nexport default Numbers;","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n  const request = axios.post(baseUrl, newPerson)\n  return request.then(response =>  response.data)\n}\n\nconst remove = person => {\n  const request = axios.delete(`${baseUrl}/${person}`)\n  return request.then(response => response)\n}\n\nconst update = person => {\n  const request = axios.put(`${baseUrl}/${person.id}`, person)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React, { useEffect } from 'react';\n\nconst Notify = ({msg, setMsg, success}) => {\n\n  useEffect(() => {\n    setTimeout(() => {\n      setMsg(null)\n    }, 5000)\n  }, [msg, setMsg])\n\n  let color = 'green';\n  if (!success) { color = 'red' }\n  const msgStyle = {\n    color: color,\n    background: 'lightgray',\n    border: `2px solid ${color}`\n  }\n\n  if (msg === null) {\n    return null\n  } else { return (\n    <div style={msgStyle}>\n      {`${msg}`}\n    </div>\n  )}\n}\n\nexport default Notify;\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/filter'\nimport Newperson from './components/newperson'\nimport Numbers from './components/numbers'\nimport personsapi from './services/persons'\nimport Notify from './components/notify'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNr, setNewNr ] = useState('')\n  const [ searchName, setSearchName ] = useState('')\n  const [ filteredPersons, setFilteredPersons ] = useState(persons)\n  const [ msg, setMsg ] = useState(null)\n  const [ success, setSuccess ] = useState(true)\n\n  useEffect(() => {\n    personsapi.getAll().then(persondata => {setPersons(persondata)})\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    let found = false\n    if (persons.filter(person => person.name === newName).length !== 0) {\n      found = true\n    }\n    if (found) {\n      const p = persons.filter(person => person.name === newName)\n      if (window.confirm(`${p[0].name} is already added to phonebook.\n        Replace the old number with a new one?`)) {\n          const newPerson = {...p[0], number: newNr}\n          personsapi.update(newPerson)\n          .then(response => {\n            setPersons(persons.map(\n              person => person.id !== response.id ? person : response))\n            setMsg(`Person updated`)\n            setSuccess(true)\n          })\n        }\n      setNewName('')\n      setNewNr('')\n      return\n    }\n    const newPerson = {\n      name: newName,\n      number: newNr\n    }\n    personsapi.create(newPerson)\n      .then(response => {\n        setPersons(persons.concat(response))\n        setMsg(`Person added`)\n        setSuccess(true)\n        setNewName('')\n        setNewNr('')\n    })\n      .catch(error => {\n        console.log(error.response.data.error)\n        setMsg(error.response.data.error)\n        setSuccess(false)\n    })\n  }\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n  const handleNrChange = (event) => setNewNr(event.target.value)\n  const handleSearchNameChange = (event) => setSearchName(event.target.value)\n\n  const filter = () => {\n    let fp = persons.filter(n => n.name.toLowerCase().includes(searchName.toLowerCase()))\n    setFilteredPersons(fp)\n  }\n\n  useEffect(filter, [searchName, persons])\n\n  const delButton = (key) => {\n    return () => {\n      const p = persons.filter(person => person.id === key)\n      if (window.confirm(`Delete ${p[0].name}?`)) {\n        personsapi.remove(key).then(response => {\n          setPersons(persons.filter(person => person.id !== key))\n          setMsg(`Person deleted`)\n          setSuccess(true)\n        }).catch(response => console.log(response))\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        searchName={searchName}\n        handleSearchNameChange={handleSearchNameChange} />\n      <Newperson\n        addName={addName}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNr={newNr}\n        handleNrChange={handleNrChange} />\n      <Notify\n        msg={msg}\n        setMsg={setMsg}\n        success={success} />\n      <Numbers\n        persons={persons}\n        filteredPersons={filteredPersons}\n        delButton={delButton} />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}